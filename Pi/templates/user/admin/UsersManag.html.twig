{% extends 'sideBar.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block content %}
<main id="main" class="main">
    <div class="pagetitle">
        <h1>Gestion des Utilisateurs</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="">Accueil</a></li>
                <li class="breadcrumb-item active">Utilisateurs</li>
            </ol>
        </nav>
    </div><section class="section">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Liste des Utilisateurs</h5>

                        {% for message in app.flashes('success') %}
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                {{ message }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}

                        {% for message in app.flashes('error') %}
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                {{ message }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Rechercher..." id="searchInput">
                                    <button class="btn btn-outline-secondary" type="button" id="searchButton">
                                        <i class="bi bi-search"></i>
                                    </button>
                                </div>
                            </div>
                           
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover table-bordered">
                                <thead class="table-light">
                                    <tr>
                                      
                                    <th scope="col">Photo</th>
<th scope="col">Full Name</th>
<th scope="col">Email</th>
<th scope="col">Role</th>
<th scope="col">Phone Number</th>
<th scope="col">Status</th>
<th scope="col">Actions</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    {% for user in pagination %}
                                        <tr>
                                           
                                            <td>
   

<img src="{{ user.imageUrl is not empty ? asset(user.imageUrl) : asset('assets/imgP/logo2.png') }}" alt="Profile Image" class="rounded-circle" width="40" height="40">

                                                      
                                            </td>
                                            <td>{{ user.nom }} {{ user.prenom }}</td>
                                            <td>{{ user.email }}</td>
                                           <td>
    <span class="badge
        {% if 'ADMIN' in user.role %}bg-danger
        {% elseif 'USER' in user.role %}bg-primary
        {% else %}bg-warning text-dark
        {% endif %}">
        {% if 'ADMIN' in user.role %}
            Admin
        {% elseif 'USER' in user.role %}
            User
        {% else %}
            Project Manager
        {% endif %}
    </span>
</td>

                                            <td>{{ user.numPhone }}</td>
                                            <td>
                                               <span class="badge bg-{{ user.status == 'ACTIVE' ? 'success' : (user.status == 'BLOCKED' ? 'danger' : 'secondary') }}">
                                                {{ user.status == 'ACTIVE' ? 'Actif' : (user.status == 'BLOCKED' ? 'Bloqué' : 'Inconnu') }}
                                            </span>

                                            </td>

                                            
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button type="button"
                                                            class="btn btn-sm btn-warning edit-user-btn"
                                                             data-bs-toggle="modal"
                                                            data-bs-target="#edit-user-modal"
                                                            data-user-id="{{ user.id }}"
                                                            title="Modifier">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>

                                                    <button type="button"
                                                            class="btn btn-sm btn-info view-user"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#userModal"
                                                            data-user-id="{{ user.id }}"
                                                            title="Voir détails">
                                                        <i class="bi bi-eye"></i>
                                                    </button>

                                                    <form method="post"
      action="{{ path('admin_user_delete', {'id': user.id}) }}"
      onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?');"
      class="d-inline">
    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
    <button type="submit" class="btn btn-sm btn-danger" title="Supprimer">
        <i class="bi bi-trash"></i>
    </button>
</form>
                                                </div>
                                            </td>
                                        </tr>
                                    {% else %}
                                        <tr>
                                            <td colspan="8" class="text-center">Aucun utilisateur trouvé</td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>

                        <div class="navigation">
                            {{ knp_pagination_render(pagination) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Détails de l'utilisateur</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="userDetails">
                </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="edit-user-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit User</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="edit-user-form-container">
            </div>
        </div>
    </div>
</div>

<style>
    .badge {
        font-size: 0.8em;
        font-weight: 500;
    }
    .table th {
        white-space: nowrap;
    }
    .btn-group .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
    img.rounded-circle {
        object-fit: cover;
    }
</style>

{% block javascripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Search functionality
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.getElementById('searchButton');

        searchButton.addEventListener('click', function() {
            const filter = searchInput.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(filter) ? '' : 'none';
            });
        });

        // View user details in modal
        document.querySelectorAll('.view-user').forEach(button => {
            button.addEventListener('click', function() {
                const userId = this.getAttribute('data-user-id');
                fetch(`/admin/user/${userId}/details`, { // URL corrigée
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    document.getElementById('userDetails').innerHTML = html;
                })
                .catch(error => {
                    document.getElementById('userDetails').innerHTML = `
                        <div class="alert alert-danger">
                            Une erreur s'est produite lors du chargement des détails.
                        </div>
                    `;
                });
            });
        });

        // Edit user in modal
   document.querySelectorAll('.edit-user-btn').forEach(button => {
    button.addEventListener('click', function() {
        const userId = this.getAttribute('data-user-id');
        fetch(`/admin/user/${userId}/edit-modal`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const container = document.getElementById('edit-user-form-container');
                if (container) {
                    container.innerHTML = data.form;
                    if (window.jQuery && $('#edit-user-modal').length) { // Vérification de jQuery
                        $('#edit-user-modal').modal('show');
                        document.getElementById('user-edit-form').addEventListener('submit', function(event) {
                            event.preventDefault();
                            fetch(`/admin/user/${userId}/update`, {
                                method: 'POST',
                                body: new FormData(this)
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    $('#edit-user-modal').modal('hide');
                                    location.reload();
                                } else if (data.errors) {
                                    alert(data.errors);
                                }
                            });
                        });
                    } else {
                        console.error("Modal element with ID 'edit-user-modal' not found or jQuery not loaded.");
                        alert("Une erreur s'est produite. La modal n'a pas été trouvée ou jQuery n'est pas chargé.");
                    }
                } else {
                    console.error("Element with ID 'edit-user-form-container' not found.");
                    alert("Une erreur s'est produite. L'élément nécessaire pour le formulaire n'a pas été trouvé.");
                }
            })
            .catch(error => {
                console.error("Error fetching edit form:", error);
                alert("Une erreur s'est produite lors du chargement du formulaire d'édition.");
            });
    });
});
    });
</script>
{% endblock %}
{% endblock %}