{% extends 'navBar.html.twig' %}

{% block title %}My Complaints{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/complaint.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .container {
            max-width: 1200px;
            margin: auto;
            padding: 0 1rem;
        }
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        .section-header h1 {
            font-family: 'Segoe UI', sans-serif;
            font-weight: 600;
            color: #2c3e50;
            font-size: 2.2rem;
        }
        .btn-new-complaint {
            background: linear-gradient(90deg, #007bff, #0056b3);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-size: 1rem;
            font-weight: 500;
            transition: transform 0.2s ease, background 0.3s ease;
        }
        .btn-new-complaint:hover {
            background: linear-gradient(90deg, #0056b3, #003d82);
            transform: translateY(-2px);
        }
        .complaint-card {
            background: linear-gradient(145deg, #ffffff, #f7f9fc);
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            margin-bottom: 1.5rem;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            min-height: 300px;
            display: flex;
            flex-direction: column;
            border-left: 4px solid;
        }
        .complaint-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.12);
        }
        .status-pending {
            border-left-color: #ffca2c;
        }
        .status-resolved {
            border-left-color: #28a745;
        }
        .status-rejected {
            border-left-color: #dc3545;
        }
        .card-body {
            padding: 1.5rem;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }
        .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .card-text {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 1rem;
            flex-grow: 1;
            line-height: 1.5;
        }
        .badge-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            transition: transform 0.2s ease;
        }
        .badge-pending {
            background-color: #ffca2c;
            color: #212529;
        }
        .badge-resolved {
            background-color: #28a745;
            color: white;
        }
        .badge-rejected {
            background-color: #dc3545;
            color: white;
        }
        .badge-status:hover {
            transform: scale(1.05);
        }
        .text-muted {
            font-size: 0.85rem;
            color: #6c757d;
        }
        .btn-action {
            padding: 0.4rem 0.8rem;
            font-size: 0.9rem;
            border-radius: 8px;
            transition: background 0.3s ease, transform 0.2s ease;
        }
        .btn-view {
            background: #e9ecef;
            color: #333;
            border: none;
        }
        .btn-view:hover {
            background: #d3d3d3;
            transform: scale(1.05);
        }
        .btn-edit {
            background: #007bff;
            color: white;
            border: none;
        }
        .btn-edit:hover {
            background: #0056b3;
            transform: scale(1.05);
        }
        .btn-delete {
            background: #dc3545;
            color: white;
            border: none;
        }
        .btn-delete:hover {
            background: #c82333;
            transform: scale(1.05);
        }
        .modal-dialog {
            max-width: 600px;
        }
        .modal-content {
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        .modal-header {
            border-bottom: 1px solid #dee2e6;
            background: #f8f9fa;
        }
        .modal-title {
            font-family: 'Segoe UI', sans-serif;
            font-weight: 600;
            color: #2c3e50;
        }
        .modal-body {
            padding: 1.5rem;
        }
        .modal-complaint-subject {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 1rem;
        }
        .modal-complaint-content {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        .modal-footer {
            border-top: 1px solid #dee2e6;
        }

        /* Media Queries pour responsivit√© */
        @media (max-width: 768px) {
            .complaint-card {
                min-height: 280px;
            }
            .card-title {
                font-size: 1.1rem;
            }
            .card-text {
                font-size: 0.85rem;
            }
        }
        @media (max-width: 576px) {
            .complaint-card {
                min-height: 260px;
            }
            .btn-action {
                padding: 0.3rem 0.6rem;
                font-size: 0.8rem;
            }
        }
    </style>
{% endblock %}

{% block content %}
    <section>
        <div class="container">
            <div class="section-header">
                <h1>My Complaints</h1>
                <a href="{{ path('app_complaint_new') }}" class="btn btn-new-complaint">
                    <i class="fas fa-plus"></i> New Complaint
                </a>
            </div>

            <div class="row">
                {% for complaint in complaints %}
                    <div class="col-lg-6 col-md-6">
                        <div class="complaint-card status-{{ complaint.getStatusText()|lower }}"
                             data-complaint-id="{{ complaint.id }}"
                             data-complaint-subject="{{ complaint.subject|e('html_attr') }}"
                             data-complaint-content="{{ complaint.content|e('html_attr') }}"
                             data-complaint-status="{{ complaint.getStatusText() }}"
                             data-complaint-response="{{ complaint.response|e('html_attr') }}"
                             data-complaint-created="{{ complaint.createdAt|date('Y-m-d H:i') }}"
                                {% if complaint.respondedBy %}
                            data-complaint-responder="{{ complaint.respondedBy.prenom }} {{ complaint.respondedBy.nom }}"
                                {% endif %}>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <h3 class="card-title">{{ complaint.subject }}</h3>
                                    <span class="badge-status badge-{{ complaint.getStatusText()|lower }}">
                                        {{ complaint.getStatusText() }}
                                    </span>
                                </div>

                                <div class="card-text">
                                    <p>{{ complaint.content|length > 100 ? complaint.content|slice(0, 100) ~ '...' : complaint.content }}</p>
                                </div>

                                <div class="text-muted mb-3">
                                    Submitted on {{ complaint.createdAt|date('Y-m-d H:i') }}
                                    {% if complaint.respondedBy %}
                                        <br>Response by: {{ complaint.respondedBy.prenom }} {{ complaint.respondedBy.nom }}
                                    {% endif %}
                                </div>

                                <div class="d-flex">
                                    <button class="btn btn-action btn-view">
                                        <i class="fas fa-eye"></i> View Details
                                    </button>

                                    <div class="ms-auto">
                                        <a href="{{ path('app_complaint_edit', {id: complaint.id}) }}"
                                           class="btn btn-action btn-edit">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <form method="POST" action="{{ path('app_complaint_delete', {id: complaint.id}) }}"
                                              class="d-inline delete-form" data-id="{{ complaint.id }}">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ complaint.id) }}">
                                            <button type="submit" class="btn btn-action btn-delete">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                {% else %}
                    <div class="col-12">
                        <div class="alert alert-info">No complaints found.</div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </section>

    <!-- Complaint Details Modal -->
    <div class="modal fade" id="complaintModal" tabindex="-1" aria-labelledby="complaintModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="complaintModalLabel">Complaint Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h4 id="modal-complaint-subject" class="modal-complaint-subject"></h4>
                    <div class="d-flex justify-content-between mb-3">
                        <span class="badge-status" id="modal-complaint-status"></span>
                        <small class="text-muted" id="modal-complaint-date"></small>
                    </div>

                    <div class="mb-4">
                        <h5>Details:</h5>
                        <p id="modal-complaint-content" class="modal-complaint-content"></p>
                    </div>

                    <div id="response-section" class="mb-3">
                        <h5>Admin Response:</h5>
                        <p id="modal-complaint-response" class="modal-complaint-content"></p>
                        <small class="text-muted" id="modal-complaint-responder"></small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Show flash messages
            {% for type, messages in app.flashes %}
            {% for message in messages %}
            showNotification('{{ message }}', '{{ type }}');
            {% endfor %}
            {% endfor %}

            // Complaint Modal Handling
            document.querySelectorAll(".complaint-card").forEach(card => {
                card.addEventListener("click", function (e) {
                    if (e.target.closest('.btn-action')) return;
                    const modalTitle = document.querySelector('#complaintModalLabel');
                    const modalSubject = document.querySelector('#modal-complaint-subject');
                    const modalContent = document.querySelector('#modal-complaint-content');
                    const modalStatus = document.querySelector('#modal-complaint-status');
                    const modalDate = document.querySelector('#modal-complaint-date');
                    const modalResponse = document.querySelector('#modal-complaint-response');
                    const modalResponder = document.querySelector('#modal-complaint-responder');
                    const responseSection = document.querySelector('#response-section');

                    // Extract info from data-* attributes
                    const subject = this.getAttribute('data-complaint-subject');
                    const content = this.getAttribute('data-complaint-content');
                    const status = this.getAttribute('data-complaint-status');
                    const response = this.getAttribute('data-complaint-response');
                    const date = this.getAttribute('data-complaint-created');
                    const responder = this.getAttribute('data-complaint-responder');

                    // Update modal content
                    modalTitle.textContent = 'Complaint Details';
                    modalSubject.textContent = subject;
                    modalContent.textContent = content;
                    modalStatus.textContent = status;
                    modalDate.textContent = 'Submitted on: ' + date;

                    // Set status color
                    if (status === 'Pending') {
                        modalStatus.className = 'badge-status badge-pending';
                    } else if (status === 'Resolved') {
                        modalStatus.className = 'badge-status badge-resolved';
                    } else {
                        modalStatus.className = 'badge-status badge-rejected';
                    }

                    // Handle response section
                    if (response && response.trim() !== '') {
                        modalResponse.textContent = response;
                        if (responder) {
                            modalResponder.textContent = 'Response by: ' + responder;
                        }
                        responseSection.style.display = 'block';
                    } else {
                        responseSection.style.display = 'none';
                    }

                    const complaintModal = new bootstrap.Modal(document.getElementById('complaintModal'));
                    complaintModal.show();
                });
            });

            // Delete confirmation
            document.querySelectorAll(".delete-form").forEach(form => {
                form.addEventListener("submit", function(event) {
                    event.preventDefault();
                    if (confirm("Are you sure you want to delete this complaint?")) {
                        fetch(this.action, {
                            method: "POST",
                            body: new FormData(this),
                        })
                            .then(response => {
                                if (response.ok) {
                                    showNotification("Complaint deleted successfully!", "success");
                                    window.location.reload();
                                } else {
                                    showNotification("Failed to delete complaint!", "error");
                                }
                            })
                            .catch(error => {
                                console.error("Error deleting complaint:", error);
                                showNotification("Error deleting complaint!", "error");
                            });
                    }
                });
            });
        });
    </script>
{% endblock %}