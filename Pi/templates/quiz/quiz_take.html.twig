{% extends 'navBar.html.twig' %}

{% block title %}Take Quiz{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <style>
    .quiz-container {
      max-width: 800px;
      margin: auto;
      padding-top: 100px;
    }

    .fixed-progress {
      position: fixed;
      top: 70px;
      left: 0;
      width: 100%;
      background: #f8f9fa;
      z-index: 1000;
      padding: 15px 30px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    }

    .progress {
      height: 28px;
      background-color: #dee2e6;
      border-radius: 20px;
      overflow: hidden;
    }

    .progress-bar {
      height: 100%;
      color: white;
      font-weight: bold;
      line-height: 28px;
      text-align: center;
      background-image: linear-gradient(to right, #f39c12, #2ecc71);
      transition: width 0.4s ease-in-out;
      border-radius: 20px;
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.15);
    }

    .question-card {
      border-radius: 1rem;
      transition: box-shadow 0.2s ease;
    }

    .question-card:hover {
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    .question-title {
      font-weight: 600;
      color: #2c3e50;
    }

    .form-check-label {
      font-size: 0.95rem;
    }

    .submit-btn {
      background-color: #3498db;
      color: #fff;
      font-weight: 500;
      border-radius: 0.5rem;
    }

    .submit-btn:hover {
      background-color: #2980b9;
    }
  </style>
{% endblock %}

{% block content %}
<main id="main" class="main">
  <div class="pagetitle">
    <h1>{{ quiz.nom }}</h1>
    <nav>
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="{{ path('app_home') }}">Home</a></li>
        <li class="breadcrumb-item active">Take Quiz</li>
      </ol>
    </nav>
  </div>

  <div class="fixed-progress">
    <div class="progress">
      <div id="progress-bar" class="progress-bar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
        0%
      </div>
    </div>
  </div>

  <section class="section quiz-container">
    {% if questions is not empty %}
      <form method="post" action="{{ path('user_quiz_submit', { id: quiz.idQuiz }) }}">
        {% for question in questions %}
          <div class="card question-card mb-4 shadow-sm">
            <div class="card-body">
              <h5 class="question-title mb-3" id="question-title-{{ question.idQuestion }}">
                {{ loop.index }}. {{ question.question }}
              </h5>

              <div class="mb-3 d-flex align-items-center gap-2">
                <select id="lang-{{ question.idQuestion }}" class="form-select form-select-sm w-auto">
                  <option value="en">üá∫üá∏ English</option>
                  <option value="fr">üá´üá∑ Fran√ßais</option>
                  <option value="es">üá™üá∏ Espa√±ol</option>
                </select>
                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="translateQuestion({{ question.idQuestion }})">
                  üåç Translate
                </button>
              </div>

              <div id="translated-question-{{ question.idQuestion }}" class="mb-3 text-muted" style="display:none;"></div>

              {% for reponse in question.reponses %}
                <div class="form-check mb-2">
                  <input
                    class="form-check-input quiz-answer"
                    type="radio"
                    name="question_{{ question.idQuestion }}"
                    id="reponse_{{ reponse.idReponse }}"
                    value="{{ reponse.idReponse }}"
                    required
                  >
                  <label class="form-check-label" for="reponse_{{ reponse.idReponse }}">
                    {{ reponse.response }}
                  </label>
                </div>
              {% endfor %}
            </div>
          </div>
        {% endfor %}

        <div class="text-center mt-4">
          <button type="submit" class="btn submit-btn px-5">
            ‚úÖ Submit Quiz
          </button>
        </div>
      </form>
    {% else %}
      <div class="alert alert-info text-center">
        No questions available for this quiz.
      </div>
    {% endif %}
  </section>
</main>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const totalQuestions = document.querySelectorAll('.question-card').length;
    const progressBar = document.getElementById('progress-bar');
    const answeredQuestions = new Set();

    document.querySelectorAll('.quiz-answer').forEach(input => {
      input.addEventListener('change', function () {
        answeredQuestions.add(this.name);
        const progress = Math.round((answeredQuestions.size / totalQuestions) * 100);
        progressBar.style.width = progress + '%';
        progressBar.setAttribute('aria-valuenow', progress);
        progressBar.textContent = progress + '%';
      });
    });
  });

  function translateQuestion(id) {
    const lang = document.getElementById(`lang-${id}`).value;
    const questionContainer = document.getElementById(`translated-question-${id}`);
    const questionTitle = document.getElementById(`question-title-${id}`);
    const responseLabels = document.querySelectorAll(`[id^="reponse_"][id*="_${id}"] ~ label`);

    questionContainer.style.display = 'block';
    questionContainer.innerHTML = 'üîÑ Translating...';

    fetch(`/quiz/question/translate/${id}/${lang}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Update question translation
          questionContainer.innerHTML = `<strong>Translation:</strong><br>${data.question}`;

          // Update question title (optional, if you want to show it inline too)
          // questionTitle.innerText = data.question;

          // Update responses
          const translatedResponses = data.responses;
          const labels = document.querySelectorAll(`label[for^="reponse_"]`);

          let responseIndex = 0;
          labels.forEach(label => {
            // Only update labels belonging to this question
            if (label.htmlFor.includes(`_${id}`) && translatedResponses[responseIndex]) {
              label.innerText = translatedResponses[responseIndex];
              responseIndex++;
            }
          });

        } else {
          questionContainer.innerHTML = `<div class="text-danger">‚ùå Error: ${data.message}</div>`;
        }
      })
      .catch(error => {
        questionContainer.innerHTML = `<div class="text-danger">‚ùå Error during translation: ${error.message}</div>`;
      });
  }
</script>
{% endblock %}
